{\rtf1\ansi\deff0\nouicompat{\fonttbl{\f0\fnil\fcharset0 Courier New;}}
{\*\generator Riched20 10.0.22621}\viewkind4\uc1 
\pard\f0\fs22\lang1033 /* Welcome to the SQL mini project. You will carry out this project partly in\par
the PHPMyAdmin interface, and partly in Jupyter via a Python connection.\par
\par
This is Tier 1 of the case study, which means that there'll be more guidance for you about how to \par
setup your local SQLite connection in PART 2 of the case study. \par
\par
The questions in the case study are exactly the same as with Tier 2. \par
\par
PART 1: PHPMyAdmin\par
You will complete questions 1-9 below in the PHPMyAdmin interface. \par
Log in by pasting the following URL into your browser, and\par
using the following Username and Password:\par
\par
URL: https://sql.springboard.com/\par
Username: student\par
Password: learn_sql@springboard\par
\par
The data you need is in the "country_club" database. This database\par
contains 3 tables:\par
    i) the "Bookings" table,\par
    ii) the "Facilities" table, and\par
    iii) the "Members" table.\par
\par
In this case study, you'll be asked a series of questions. You can\par
solve them using the platform, but for the final deliverable,\par
paste the code for each solution into this script, and upload it\par
to your GitHub.\par
\par
Before starting with the questions, feel free to take your time,\par
exploring the data, and getting acquainted with the 3 tables. */\par
\par
\par
/* QUESTIONS \par
/* Q1: Some of the facilities charge a fee to members, but some do not.\par
Write a SQL query to produce a list of the names of the facilities that do. */\par
\par
CODE: \par
\par
SELECT \par
\tab name, \par
\tab membercost \par
FROM Facilities \par
WHERE membercost != 0;\par
\par
ANSWER: \par
\par
\tab Tennis Courts 1 & 2\par
\tab Massage Rooms 1 & 2\par
\tab Squash Court\par
\par
\par
/* Q2: How many facilities do not charge a fee to members? */\par
\par

\pard CODE: \par
\par
SELECT \par
\tab name, \par
\tab membercost \par
FROM Facilities \par
WHERE membercost = 0;\par
\par
ANSWER: 4\par

\pard\par
\par
/* Q3: Write an SQL query to show a list of facilities that charge a fee to members,\par
where the fee is less than 20% of the facility's monthly maintenance cost.\par
Return the facid, facility name, member cost, and monthly maintenance of the\par
facilities in question. */\par
\par

\pard CODE: \par
\par
SELECT \par
\tab facid, \par
\tab name AS facility_name,\par
\tab membercost,\par
\tab monthlymaintenance\par
FROM Facilities \par
WHERE\par
\tab membercost > 0\par
\tab AND membercost < 0.2 * monthlymaintenance;\par
\par
ANSWER: \par
\par

\pard\tab facid,facility_name,membercost,membermaintenance\par
\tab 0,Tennis Court 1,5.0,200\par
\tab 1,Tennis Court 2,5.0,200\par
\tab 4,Massage Room 1,9.9,3000\par
\tab 5,Massage Room 2,9.9,3000\par
\tab 6,Squash Court,3.5,80\par
\par
/* Q4: Write an SQL query to retrieve the details of facilities with ID 1 and 5.\par
Try writing the query without using the OR operator. */\par
\par

\pard CODE: \par
\par
SELECT *\par
FROM Facilities\par
WHERE facid IN (1, 5)\par
\par
ANSWER: N/A\par

\pard\par
\par
\par
/* Q5: Produce a list of facilities, with each labelled as\par
'cheap' or 'expensive', depending on if their monthly maintenance cost is\par
more than $100. Return the name and monthly maintenance of the facilities\par
in question. */\par
\par
CODE: \par
\par
SELECT \par
\tab name AS facility_name, \par
\tab monthlymaintenance,\par
\tab CASE\par
\tab\tab WHEN monthlymaintenance > 100 THEN 'expensive'\par
\tab\tab ELSE 'cheap'\par
\tab END AS cost_category\par
FROM Facilities\par
\par
ANSWER: \par
\tab\par
facility_name\tab monthlymaintenance\tab cost_category\tab\par
Tennis Court 1\tab 200\tab expensive\par
Tennis Court 2\tab 200\tab expensive\par
Badminton Court\tab 50\tab cheap\par
Table Tennis\tab 10\tab cheap\par
Massage Room 1\tab 3000\tab expensive\par
Massage Room 2\tab 3000\tab expensive\par
Squash Court\tab 80\tab cheap\par
Snooker Table\tab 15\tab cheap\par
Pool Table\tab 15\tab cheap\par
\par
\par
\par
/* Q6: You'd like to get the first and last name of the last member(s)\par
who signed up. Try not to use the LIMIT clause for your solution. */\par
\par
CODE: \par
\tab\par
SELECT\par
\tab firstname,\par
\tab surname,\par
\tab joindate\par
FROM \par
\tab Members\par
WHERE\par
\tab joindate = (SELECT MAX(joindate) FROM Members)\par
\par
ANSWER: Darren Smith 2012-09-26 18:08:45\par
\par
\par
\par
/* Q7: Produce a list of all members who have used a tennis court.\par
Include in your output the name of the court, and the name of the member\par
formatted as a single column. Ensure no duplicate data, and order by\par
the member name. */\par
\par
CODE: \par
\par
SELECT DISTINCT\par
\tab CONCAT(m.firstname, " ", m.surname) AS member_name\par
\tab f.name AS court_name\tab\par
FROM\par
\tab Bookings AS b\par
\par
JOIN Members AS m ON b.memid = m.memid\par
JOIN Facilities AS f ON b.facid = f.facid\par
\par
WHERE \par
\tab f.name LIKE 'Tennis Court%'\par
ORDER BY \par
\tab member_name\par
\par
\par
/* Q8: Produce a list of bookings on the day of 2012-09-14 which\par
will cost the member (or guest) more than $30. Remember that guests have\par
different costs to members (the listed costs are per half-hour 'slot'), and\par
the guest user's ID is always 0. Include in your output the name of the\par
facility, the name of the member formatted as a single column, and the cost.\par
Order by descending cost, and do not use any subqueries. */\par
\par
CODE:\par
\par
SELECT\par
    f.name AS facility_name,\par
    CONCAT(m.firstname, ' ', m.surname) AS member_name,\par
    CASE\par
        WHEN b.memid = 0 THEN f.guestcost * b.slots\par
        ELSE f.membercost * b.slots\par
    END AS cost\par
FROM \par
    Bookings AS b\par
JOIN \par
    Members AS m ON b.memid = m.memid\par
JOIN \par
    Facilities AS f ON b.facid = f.facid\par
WHERE \par
    b.starttime >= '2012-09-14' AND b.starttime < '2012-09-15'\par
    AND (\par
        (b.memid = 0 AND f.guestcost * b.slots > 30)\par
        OR (b.memid != 0 AND f.membercost * b.slots > 30)\par
    )\par
ORDER BY \par
    cost DESC;\par
\par
\par
/* Q9: This time, produce the same result as in Q8, but using a subquery. */\par
\par
CODE: \par
\par
WITH subquery AS (\par
    SELECT\par
        b.facid,\par
        b.memid,\par
        f.name,\par
        m.firstname,\par
\tab\tab m.surname,\par
        CASE\par
            WHEN b.memid = 0 THEN f.guestcost * b.slots\par
            ELSE f.membercost * b.slots\par
        END AS cost,\par
        b.starttime\par
    FROM \par
        country_club.Bookings AS b\par
    JOIN \par
        country_club.Members AS m ON b.memid = m.memid\par
    JOIN \par
        country_club.Facilities AS f ON b.facid = f.facid\par
    WHERE \par
        b.starttime >= '2012-09-14' AND b.starttime < '2012-09-15'\par
) \par
\par
SELECT\par
    f.name AS facility_name,\par
    CONCAT(m.firstname, ' ', m.surname) AS member_name,\par
    cost\par
FROM \par
\tab subquery\par
WHERE \par
    cost > 30\par
ORDER BY \par
    cost DESC;\par
\par
/* PART 2: SQLite\par
/* We now want you to jump over to a local instance of the database on your machine. \par
\par
Copy and paste the LocalSQLConnection.py script into an empty Jupyter notebook, and run it. \par
\par
Make sure that the SQLFiles folder containing thes files is in your working directory, and\par
that you haven't changed the name of the .db file from 'sqlite\\db\\pythonsqlite'.\par
\par
You should see the output from the initial query 'SELECT * FROM FACILITIES'.\par
\par
Complete the remaining tasks in the Jupyter interface. If you struggle, feel free to go back\par
to the PHPMyAdmin interface as and when you need to. \par
\par
You'll need to paste your query into value of the 'query1' variable and run the code block again to get an output.\par
 \par
QUESTIONS:\par
/* Q10: Produce a list of facilities with a total revenue less than 1000.\par
The output of facility name and total revenue, sorted by revenue. Remember\par
that there's a different cost for guests and members! */\par
\par
/* Q11: Produce a report of members and who recommended them in alphabetic surname,firstname order */\par
\par
\par
/* Q12: Find the facilities with their usage by member, but not guests */\par
\par
\par
/* Q13: Find the facilities usage by month, but not guests */\par
\par
\par
}
 